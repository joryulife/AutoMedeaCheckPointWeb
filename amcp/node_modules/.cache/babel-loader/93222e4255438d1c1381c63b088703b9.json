{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button } from '@mui/material';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nconst [open, setOpen] = React.useState({\n  time: false,\n  movie: false\n});\n\nconst handleClick1 = () => {\n  setOpen({ ...open,\n    time: !open.time,\n    movie: open.movie\n  });\n};\n\nconst handleClick2 = () => {\n  setOpen({ ...open,\n    time: open.time,\n    movie: !open.movie\n  });\n};\n\nlet m = [];\nlet t = [];\nconst [Files, setFiles] = React.useState({\n  movies: m,\n  times: t\n});\n\nfunction login(id) {\n  if (id !== \"\") {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport default function SelectTextFields(props) {\n  const [files1, setFiles1] = React.useState('movie');\n  const [files2, setFiles2] = React.useState('time');\n\n  const handleChange1 = event => {\n    setFiles1(event.target.value);\n  };\n\n  const handleChange2 = event => {\n    setFiles2(event.target.value);\n  };\n\n  const requestOptionsFiles = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({})\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, props.message), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: login(props.id),\n    onClick: () => {\n      let url = \"http://localhost:8080/FILES?ID=\" + props.id;\n      fetch(url, requestOptionsFiles).then(response => response.json()).then(responseJson => {\n        var Movies = [];\n        var Times = [];\n\n        for (let m of responseJson.movie) {\n          Movies.push({\n            value: m,\n            label: m\n          });\n        }\n\n        for (let t of responseJson.time) {\n          Times.push({\n            value: t,\n            label: t\n          });\n        }\n\n        setFiles({ ...Files,\n          movies: Movies,\n          times: Times\n        });\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"\\u4E00\\u89A7\\u53D6\\u5F97\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemButton, {\n    onClick: handleClick1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), open.time ? /*#__PURE__*/React.createElement(ExpandLess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(ExpandMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 51\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx"],"names":["React","Box","Button","ListItemButton","ListItemText","ExpandLess","open","setOpen","useState","time","movie","handleClick1","handleClick2","m","t","Files","setFiles","movies","times","login","id","SelectTextFields","props","files1","setFiles1","files2","setFiles2","handleChange1","event","target","value","handleChange2","requestOptionsFiles","method","headers","body","JSON","stringify","width","message","url","fetch","then","response","json","responseJson","Movies","Times","push","label"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button } from '@mui/material';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\n\nconst [open, setOpen] = React.useState({\n    time : false,\n    movie : false\n});\n\nconst handleClick1 = () => {\n    setOpen({\n        ...open,\n        time : !open.time,\n        movie : open.movie\n    });\n};\nconst handleClick2 = () => {\n    setOpen({\n        ...open,\n        time : open.time,\n        movie : !open.movie\n    });\n};\n\nlet m : any = [];\nlet t : any = [];\nconst [Files,setFiles] = React.useState({\n    movies : m,\n    times  : t\n});\nfunction login (id:string) {\n    if(id!==\"\"){\n        return false\n    }else{\n        return true\n    }\n}\nexport default function SelectTextFields(props:any) {\n    const [files1, setFiles1] = React.useState('movie');\n    const [files2, setFiles2] = React.useState('time');\n    const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles1(event.target.value);\n    };\n    const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles2(event.target.value);\n    };\n    \n    const requestOptionsFiles ={\n        method: 'POST',\n        headers:{'Content-Type': 'application/json'},\n        body: JSON.stringify({})\n    };\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <p>{props.message}</p>\n            <Button\n                variant=\"contained\"\n                disabled={login(props.id)}\n                onClick={()=>{\n                    let url = \"http://localhost:8080/FILES?ID=\"+props.id\n                    fetch(url,requestOptionsFiles)\n                    .then((response)=> response.json())\n                    .then((responseJson) =>{\n                        var Movies  = [];\n                        var Times   = [];\n                        for(let m of responseJson.movie){\n                            Movies.push({\n                                value: m,\n                                label: m,\n                            })\n                        }\n                        for(let t of responseJson.time){\n                            Times.push({\n                                value: t,\n                                label: t,\n                            })\n                        }\n                        setFiles({\n                            ...Files,\n                            movies:Movies,\n                            times:Times\n                        })\n                    })\n                }}\n            >\n                一覧取得\n            </Button>\n            <div>\n            <ListItemButton onClick={handleClick1}>\n                <ListItemText primary=\"Inbox\" />\n                    {open.time ? <ExpandLess /> : <ExpandMore />}\n            </ListItemButton>\n            </div>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}