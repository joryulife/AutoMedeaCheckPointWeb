{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\n\nfunction toTime(t) {\n  let mod = t % 3600;\n  let h = (t - mod) / 3600;\n  mod = (t - h * 3600) % 60;\n  let m = (t - h * 3600 - mod) / 60;\n  let s = t - h * 3600 - m * 60;\n  let sh, sm, ss;\n\n  if (h < 10) {\n    sh = \"0\" + h.toString();\n  } else {\n    sh = h.toString();\n  }\n\n  if (m < 10) {\n    sm = \"0\" + m.toString();\n  } else {\n    sm = m.toString();\n  }\n\n  if (s < 10) {\n    ss = \"0\" + s.toFixed(0);\n  } else {\n    ss = s.toFixed(0);\n  }\n\n  let timeString = sh + \":\" + sm + \":\" + ss;\n  return timeString;\n}\n\nexport default function ContainedButtons() {\n  const [recordState, setState] = React.useState({\n    start: false,\n    break: true,\n    stamp: true,\n    stop: true,\n    save: true\n  });\n  const [date, setDate] = React.useState({\n    t: new Date()\n  });\n  let timeArray = [];\n  let flagArray = [];\n  const [timestamp, setStamp] = React.useState({\n    time: timeArray,\n    flag: flagArray\n  });\n  const [filenameState, setFilename] = React.useState({\n    filename: \"\"\n  });\n\n  const handleChange = event => {\n    setFilename({ ...filenameState,\n      filename: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& > :not(style)': {\n        m: 1,\n        width: '50ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"\\u4FDD\\u5B58\\u3059\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3092\\u6307\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002(\\u62E1\\u5F35\\u5B50\\u306F\\u4E0D\\u8981)\",\n    variant: \"outlined\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n\n      if (copyList.length === 0) {\n        copyList.push(0);\n        copyListF.push(true);\n      } else {\n        let tl = timestamp.time.length;\n        let nt = new Date();\n        let ott = date.t.getTime();\n        let ntt = nt.getTime();\n        copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n        copyListF.push(true);\n      }\n\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"\\u30B9\\u30BF\\u30FC\\u30C8\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n      let tl = timestamp.time.length;\n      let nt = new Date();\n      let ott = date.t.getTime();\n      let ntt = nt.getTime();\n      copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n      copyListF.push(false);\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.break,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"\\u4E00\\u6642\\u4E2D\\u65AD\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n      let tl = timestamp.time.length;\n      let nt = new Date();\n      let ott = date.t.getTime();\n      let ntt = nt.getTime();\n      copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n      copyListF.push(true);\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.stamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, \"\\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: true,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: false\n      });\n    },\n    disabled: recordState.stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"\\u505C\\u6B62\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n    },\n    disabled: recordState.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"\\u4FDD\\u5B58\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [];\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"\\u30EA\\u30BB\\u30C3\\u30C8\\u203B\\u8A18\\u9332\\u306F\\u7834\\u68C4\\u3055\\u308C\\u307E\\u3059\")), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 650\n    },\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, \"\\u6642\\u523B\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, \"\\u30D5\\u30E9\\u30B0\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, \"\\u533A\\u9593\\u6642\\u9593\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, timestamp.time.map((item, index) => {\n    let interval = timestamp.time[index + 1] - item;\n\n    if (timestamp.flag[index]) {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        sx: {\n          '&:last-child td, &:last-child th': {\n            border: 0\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 41\n        }\n      }, toTime(item), \"~\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 41\n        }\n      }, \"\\u89E3\\u6790\\u533A\\u9593\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 41\n        }\n      }, toTime(interval)));\n    } else {\n      return /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        sx: {\n          '&:last-child td, &:last-child th': {\n            border: 0\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }\n      }, toTime(item), \"~\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 41\n        }\n      }, \"\\u4E2D\\u65AD\\u533A\\u9593\"), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 41\n        }\n      }, toTime(interval)));\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx"],"names":["React","Button","Stack","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","toTime","t","mod","h","m","s","sh","sm","ss","toString","toFixed","timeString","ContainedButtons","recordState","setState","useState","start","break","stamp","stop","save","date","setDate","Date","timeArray","flagArray","timestamp","setStamp","time","flag","filenameState","setFilename","filename","handleChange","event","target","value","width","copyList","copyListF","length","push","tl","nt","ott","getTime","ntt","minWidth","map","item","index","interval","border"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\n\nfunction toTime(t : number){\n    let mod = t%3600;\n    let h = (t-mod)/3600;\n    mod = (t-h*3600)%60;\n    let m = (t-h*3600-mod)/60;\n    let s = (t-h*3600-m*60);\n    let sh,sm,ss;\n    if(h<10){\n        sh = \"0\" + h.toString();\n    }else{\n        sh = h.toString();\n    }\n    if(m<10){\n        sm = \"0\" + m.toString();\n    }else{\n        sm = m.toString();\n    }\n    if(s<10){\n        ss = \"0\" + s.toFixed(0);\n    }else{\n        ss = s.toFixed(0);\n    }\n    let timeString = sh+\":\"+sm+\":\"+ss;\n    return timeString;\n}\n\nexport default function ContainedButtons() {\n    const [recordState, setState] = React.useState({\n        start: false,\n        break: true,\n        stamp: true,\n        stop:  true,\n        save:  true\n    });\n    const [date,setDate] = React.useState({\n        t: new Date()\n    });\n    let timeArray: number[] = [];\n    let flagArray: boolean[] = [];\n    const [timestamp, setStamp] = React.useState({\n        time : timeArray,\n        flag : flagArray\n    });\n    const [filenameState,setFilename] = React.useState({\n        filename: \"\"\n    })\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFilename({\n            ...filenameState,\n            filename: event.target.value\n        });\n    };\n\n    return (\n        <Box>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '50ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n                >\n                <TextField \n                    id=\"outlined-basic\" \n                    label=\"保存するファイル名を指定してください。(拡張子は不要)\" \n                    variant=\"outlined\" \n                    onChange={handleChange}\n                />\n            </Box>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        if(copyList.length === 0){\n                            copyList.push(0);\n                            copyListF.push(true);\n                        }else{\n                            let tl = timestamp.time.length;\n                            let nt = new Date();\n                            let ott = date.t.getTime();\n                            let ntt = nt.getTime();\n                            copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                            copyListF.push(true);\n                        }\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.start}\n                >\n                    スタート\n                </Button>\n                <Button\n                    variant=\"contained\"\n\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(false);\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setDate({\n                            ...date,\n                            t: new Date()\n                        })\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.break}\n                >\n                    一時中断\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(true);\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.stamp}\n                >\n                    タイムスタンプ\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  false\n                        });\n                    }}\n                    disabled={recordState.stop}\n                >\n                    停止\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        \n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                    }}\n                    disabled={recordState.save}\n                >\n                    保存\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList : any = [];\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList\n                        })\n                    }}\n                >\n                    リセット※記録は破棄されます\n                </Button>\n            </Stack>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>時刻</TableCell>\n                            <TableCell >フラグ</TableCell>\n                            <TableCell >区間時間</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {timestamp.time.map((item,index) => {\n                            let interval = timestamp.time[index+1]-item;\n                            if(timestamp.flag[index]){\n                                return(\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {toTime(item)}~\n                                        </TableCell>\n                                        <TableCell >解析区間</TableCell>\n                                        <TableCell >{toTime(interval)}</TableCell>\n                                    </TableRow>\n                                )\n                            }else{\n                                return(\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {toTime(item)}~\n                                        </TableCell>\n                                        <TableCell >中断区間</TableCell>\n                                        <TableCell >{toTime(interval)}</TableCell>\n                                    </TableRow>\n                                )\n                            }\n                            \n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}