{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nexport default function ContainedButtons() {\n  const [recordState, setState] = React.useState({\n    start: false,\n    break: true,\n    stamp: true,\n    stop: true,\n    save: true\n  });\n  const [date, setDate] = React.useState({\n    t: new Date()\n  });\n  let timeArray = [];\n  let flagArray = [];\n  const [timestamp, setStamp] = React.useState({\n    time: timeArray,\n    flag: flagArray\n  });\n  var TimeStamp = timestamp.time.map((item, index) => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n    },\n    disabled: recordState.start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"\\u30B9\\u30BF\\u30FC\\u30C8\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n    },\n    disabled: recordState.break,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"\\u4E00\\u6642\\u4E2D\\u65AD\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let tt = date.t.getTime;\n      copyList.push(tt);\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList\n      });\n    },\n    disabled: recordState.stamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"\\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: true,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: false\n      });\n    },\n    disabled: recordState.stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"\\u505C\\u6B62\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n    },\n    disabled: recordState.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"\\u4FDD\\u5B58\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [];\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"\\u30EA\\u30BB\\u30C3\\u30C8\\u203B\\u8A18\\u9332\\u306F\\u7834\\u68C4\\u3055\\u308C\\u307E\\u3059\")), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"main mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, TimeStamp))));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx"],"names":["React","Button","Stack","Box","List","ListItem","ListItemText","ContainedButtons","recordState","setState","useState","start","break","stamp","stop","save","date","setDate","t","Date","timeArray","flagArray","timestamp","setStamp","time","flag","TimeStamp","map","item","index","copyList","tt","getTime","push","width","maxWidth","bgcolor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\n\nexport default function ContainedButtons() {\n    const [recordState, setState] = React.useState({\n        start: false,\n        break: true,\n        stamp: true,\n        stop:  true,\n        save:  true\n    });\n    const [date,setDate] = React.useState({\n        t: new Date()\n    });\n    let timeArray: number[] = [];\n    let flagArray: boolean[] = [];\n    const [timestamp, setStamp] = React.useState({\n        time : timeArray,\n        flag : flagArray\n    });\n    var TimeStamp = timestamp.time.map((item,index) => {\n        return(\n            <ListItem key={index}>\n                <ListItemText primary={item} />\n            </ListItem>\n        )\n    })\n    return (\n        <Box>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                    }}\n                    disabled={recordState.start}\n                >\n                    スタート\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                    }}\n                    disabled={recordState.break}\n                >\n                    一時中断\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let tt = date.t.getTime;\n                        copyList.push(tt)\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList\n                        })\n                    }}\n                    disabled={recordState.stamp}\n                >\n                    タイムスタンプ\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  false\n                        });\n                    }}\n                    disabled={recordState.stop}\n                >\n                    停止\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                    }}\n                    disabled={recordState.save}\n                >\n                    保存\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList : any = [];\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList\n                        })\n                    }}\n                >\n                    リセット※記録は破棄されます\n                </Button>\n            </Stack>\n            <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                <nav aria-label=\"main mailbox folders\">\n                    <List>\n                        {TimeStamp}\n                    </List>\n                </nav>\n            </Box>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}