{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction toTime(t) {\n  console.log(t);\n  let mod = t % 3600;\n  let h = (t - mod) / 3600;\n  mod = (t - h * 3600) % 60;\n  let m = (t - h * 3600 - mod) / 60;\n  let s = t - h * 3600 - m * 60;\n  console.log(s);\n  let sh, sm, ss;\n\n  if (Math.round(h) < 10) {\n    sh = \"0\" + h.toString();\n  } else {\n    sh = h.toString();\n  }\n\n  if (Math.round(m) < 10) {\n    sm = \"0\" + m.toString();\n  } else {\n    sm = m.toString();\n  }\n\n  if (Math.round(s) < 10) {\n    ss = \"0\" + s.toFixed(0);\n  } else {\n    ss = s.toFixed(0);\n  }\n\n  let timeString = sh + \":\" + sm + \":\" + ss;\n  return timeString;\n}\n\nexport default function ContainedButtons(props) {\n  _s();\n\n  const [recordState, setState] = React.useState({\n    start: false,\n    break: true,\n    stop: true,\n    save: true\n  });\n  const [startButtonMessage, setMessage] = React.useState({\n    Message: \"スタート\",\n    state: 0\n  });\n  const [date, setDate] = React.useState({\n    t: new Date()\n  });\n  let timeArray = [];\n  let flagArray = [];\n  const [timestamp, setStamp] = React.useState({\n    time: timeArray,\n    flag: flagArray\n  });\n  const [filenameState, setFilename] = React.useState({\n    filename: \"\",\n    setName: false\n  });\n\n  const handleChange = event => {\n    setFilename({ ...filenameState,\n      filename: event.target.value\n    });\n  };\n\n  const requestOptionsTIMESTAMP = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"filename\": filenameState.filename,\n      \"timeArray\": timestamp.time,\n      \"flagArray\": timestamp.flag\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          width: '50ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u96D1\\u8AC7\\u3001\\u4F11\\u61A9\\u306A\\u3069\\u89E3\\u6790\\u306B\\u542B\\u3081\\u306A\\u3044\\u6642\\u9593\\u306F\\u4E00\\u6642\\u505C\\u6B62\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\\u672C\\u984C\\u306B\\u623B\\u308B\\u6642\\u30B9\\u30BF\\u30FC\\u30C8\\u3067\\u518D\\u958B\\u3067\\u304D\\u307E\\u3059\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"\\u4FDD\\u5B58\\u3059\\u308B\\u30D5\\u30A1\\u30A4\\u30EB\\u540D\\u3092\\u6307\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002(\\u62E1\\u5F35\\u5B50\\u306F\\u4E0D\\u8981)\",\n        variant: \"outlined\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          console.log(filenameState.filename);\n          setFilename({ ...filenameState,\n            setName: true\n          });\n        },\n        children: \"File Name Set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          if (startButtonMessage.state == 0) {\n            let copyList = [...timestamp.time];\n            let copyListF = [...timestamp.flag];\n\n            if (copyList.length === 0) {\n              copyList.push(0);\n              copyListF.push(true);\n            } else {\n              let tl = timestamp.time.length;\n              let nt = new Date();\n              let ott = date.t.getTime();\n              let ntt = nt.getTime();\n              copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n              copyListF.push(true);\n            }\n\n            setState({ ...recordState,\n              start: false,\n              break: false,\n              stop: false,\n              save: true\n            });\n            setMessage({ ...startButtonMessage,\n              Message: \"タイムスタンプ\",\n              state: 1\n            });\n            setStamp({ ...timestamp,\n              time: copyList,\n              flag: copyListF\n            });\n            setDate({ ...date,\n              t: new Date()\n            });\n          } else if (startButtonMessage.state == 1) {\n            let copyList = [...timestamp.time];\n            let copyListF = [...timestamp.flag];\n            let tl = timestamp.time.length;\n            let nt = new Date();\n            let ott = date.t.getTime();\n            let ntt = nt.getTime();\n            copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n            copyListF.push(true);\n            setState({ ...recordState,\n              start: false,\n              break: false,\n              stop: false,\n              save: true\n            });\n            setStamp({ ...timestamp,\n              time: copyList,\n              flag: copyListF\n            });\n            setDate({ ...date,\n              t: new Date()\n            });\n          } else if (startButtonMessage.state == 2) {\n            let copyList = [...timestamp.time];\n            let copyListF = [...timestamp.flag];\n            let tl = timestamp.time.length;\n            let nt = new Date();\n            let ott = date.t.getTime();\n            let ntt = nt.getTime();\n            copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n            copyListF.push(true);\n            setState({ ...recordState,\n              start: false,\n              break: false,\n              stop: false,\n              save: true\n            });\n            setMessage({ ...startButtonMessage,\n              Message: \"タイムスタンプ\",\n              state: 1\n            });\n            setStamp({ ...timestamp,\n              time: copyList,\n              flag: copyListF\n            });\n            setDate({ ...date,\n              t: new Date()\n            });\n          }\n        },\n        disabled: recordState.start,\n        children: startButtonMessage.Message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          let copyList = [...timestamp.time];\n          let copyListF = [...timestamp.flag];\n          let tl = timestamp.time.length;\n          let nt = new Date();\n          let ott = date.t.getTime();\n          let ntt = nt.getTime();\n          copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n          copyListF.push(false);\n          setState({ ...recordState,\n            start: false,\n            break: true,\n            stop: true,\n            save: true\n          });\n          setMessage({ ...startButtonMessage,\n            Message: \"再開&タイムスタンプ\",\n            state: 2\n          });\n          setDate({ ...date,\n            t: new Date()\n          });\n          setStamp({ ...timestamp,\n            time: copyList,\n            flag: copyListF\n          });\n          setDate({ ...date,\n            t: new Date()\n          });\n        },\n        disabled: recordState.break,\n        children: \"\\u4E00\\u6642\\u4E2D\\u65AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          setState({ ...recordState,\n            start: true,\n            break: true,\n            stop: true,\n            save: false\n          });\n          let copyList = [...timestamp.time];\n          let copyListF = [...timestamp.flag];\n          let tl = timestamp.time.length;\n          let nt = new Date();\n          let ott = date.t.getTime();\n          let ntt = nt.getTime();\n          copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n          copyListF.push(false);\n          setMessage({ ...startButtonMessage,\n            Message: \"スタート\",\n            state: 0\n          });\n          setStamp({ ...timestamp,\n            time: copyList,\n            flag: copyListF\n          });\n          setDate({ ...date,\n            t: new Date()\n          });\n        },\n        disabled: recordState.stop,\n        children: \"\\u505C\\u6B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          var url = \"http://localhost:8080/SAVESTAMP?ID=\" + props.id;\n          console.log(url);\n          fetch(url, requestOptionsTIMESTAMP).then(response => response.json()).then(responseJson => {\n            console.log(responseJson);\n          }).catch(e => {\n            console.log(e);\n          });\n\n          if (filenameState.setName) {\n            setState({ ...recordState,\n              start: false,\n              break: true,\n              stop: true,\n              save: true\n            });\n          }\n        },\n        disabled: recordState.save,\n        children: \"\\u4FDD\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          let copyList = [];\n          setState({ ...recordState,\n            start: false,\n            break: true,\n            stop: true,\n            save: true\n          });\n          setMessage({ ...startButtonMessage,\n            Message: \"すたーと\",\n            state: 0\n          });\n          setStamp({ ...timestamp,\n            time: copyList\n          });\n        },\n        children: \"\\u30EA\\u30BB\\u30C3\\u30C8\\u203B\\u8A18\\u9332\\u306F\\u7834\\u68C4\\u3055\\u308C\\u307E\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u6642\\u523B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u30D5\\u30E9\\u30B0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u533A\\u9593\\u6642\\u9593\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: timestamp.time.map((item, index) => {\n            let interval = timestamp.time[index + 1] - item;\n\n            if (timestamp.flag[index]) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: [toTime(item), \"~\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u89E3\\u6790\\u533A\\u9593\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: toTime(interval)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 37\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                sx: {\n                  '&:last-child td, &:last-child th': {\n                    border: 0\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: [toTime(item), \"~\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"\\u4E2D\\u65AD\\u533A\\u9593\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: toTime(interval)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 37\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContainedButtons, \"2CsqzyseQwf4bjPK2sPxLMgOAxY=\");\n\n_c = ContainedButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainedButtons\");","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx"],"names":["React","Button","Stack","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","toTime","t","console","log","mod","h","m","s","sh","sm","ss","Math","round","toString","toFixed","timeString","ContainedButtons","props","recordState","setState","useState","start","break","stop","save","startButtonMessage","setMessage","Message","state","date","setDate","Date","timeArray","flagArray","timestamp","setStamp","time","flag","filenameState","setFilename","filename","setName","handleChange","event","target","value","requestOptionsTIMESTAMP","method","headers","body","JSON","stringify","width","message","copyList","copyListF","length","push","tl","nt","ott","getTime","ntt","url","id","fetch","then","response","json","responseJson","catch","e","minWidth","map","item","index","interval","border"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\n\nfunction toTime(t : number){\n    console.log(t);\n    let mod = t%3600;\n    let h = (t-mod)/3600;\n    mod = (t-h*3600)%60;\n    let m = (t-h*3600-mod)/60;\n    let s = (t-h*3600-m*60);\n    console.log(s);\n    let sh,sm,ss;\n    if(Math.round(h)<10){\n        sh = \"0\" + h.toString();\n    }else{\n        sh = h.toString();\n    }\n    if(Math.round(m)<10){\n        sm = \"0\" + m.toString();\n    }else{\n        sm = m.toString();\n    }\n    if(Math.round(s)<10){\n        ss = \"0\" + s.toFixed(0);\n    }else{\n        ss = s.toFixed(0);\n    }\n    let timeString = sh+\":\"+sm+\":\"+ss;\n    return timeString;\n}\n\nexport default function ContainedButtons(props:any) {\n    const [recordState, setState] = React.useState({\n        start: false,\n        break: true,\n        stop:  true,\n        save:  true\n    });\n    const [startButtonMessage,setMessage] = React.useState({\n        Message:\"スタート\",\n        state:0\n    })\n    const [date,setDate] = React.useState({\n        t: new Date()\n    });\n    let timeArray: number[] = [];\n    let flagArray: boolean[] = [];\n    const [timestamp, setStamp] = React.useState({\n        time : timeArray,\n        flag : flagArray\n    });\n    const [filenameState,setFilename] = React.useState({\n        filename: \"\",\n        setName: false\n    })\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFilename({\n            ...filenameState,\n            filename: event.target.value\n        });\n    };\n    const requestOptionsTIMESTAMP ={\n        method: 'POST',\n        headers:{'Content-Type': 'application/json'},\n        body: JSON.stringify({\"filename\":filenameState.filename,\"timeArray\":timestamp.time,\"flagArray\":timestamp.flag})\n    };\n\n    return (\n        <Box>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '50ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n                >\n                <p>{props.message}</p>\n                <p>雑談、休憩など解析に含めない時間は一時停止を押してください。本題に戻る時スタートで再開できます。</p>\n                <TextField \n                    id=\"outlined-basic\" \n                    label=\"保存するファイル名を指定してください。(拡張子は不要)\"\n                    variant=\"outlined\" \n                    onChange={handleChange}\n                />\n                <p></p>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        console.log(filenameState.filename);\n                        setFilename({\n                            ...filenameState,\n                            setName: true\n                        })\n                    }}\n                >\n                    File Name Set\n                </Button>\n            </Box>\n            <p></p>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        if(startButtonMessage.state==0){\n                            let copyList = [...timestamp.time];\n                            let copyListF = [...timestamp.flag];\n                            if(copyList.length === 0){\n                                copyList.push(0);\n                                copyListF.push(true);\n                            }else{\n                                let tl = timestamp.time.length;\n                                let nt = new Date();\n                                let ott = date.t.getTime();\n                                let ntt = nt.getTime();\n                                copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                                copyListF.push(true);\n                            }\n                            setState({\n                                ...recordState,\n                                start: false,\n                                break: false,\n                                stop:  false,\n                                save:  true\n                            });\n                            setMessage({\n                                ...startButtonMessage,\n                                Message:\"タイムスタンプ\",\n                                state:1\n                            })\n                            setStamp({\n                                ...timestamp,\n                                time : copyList,\n                                flag : copyListF\n                            })\n                            setDate({\n                                ...date,\n                                t : new Date()\n                            })\n                        }else if(startButtonMessage.state==1){\n                            let copyList = [...timestamp.time];\n                            let copyListF = [...timestamp.flag];\n                            let tl = timestamp.time.length;\n                            let nt = new Date();\n                            let ott = date.t.getTime();\n                            let ntt = nt.getTime();\n                            copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                            copyListF.push(true);\n                            setState({\n                                ...recordState,\n                                start: false,\n                                break: false,\n                                stop:  false,\n                                save:  true\n                            });\n                            setStamp({\n                                ...timestamp,\n                                time : copyList,\n                                flag : copyListF\n                            })\n                            setDate({\n                                ...date,\n                                t : new Date()\n                            })\n                        }else if(startButtonMessage.state==2){\n                            let copyList = [...timestamp.time];\n                            let copyListF = [...timestamp.flag];\n                            let tl = timestamp.time.length;\n                            let nt = new Date();\n                            let ott = date.t.getTime();\n                            let ntt = nt.getTime();\n                            copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                            copyListF.push(true);\n                            setState({\n                                ...recordState,\n                                start: false,\n                                break: false,\n                                stop:  false,\n                                save:  true\n                            });\n                            setMessage({\n                                ...startButtonMessage,\n                                Message:\"タイムスタンプ\",\n                                state:1\n                            })\n                            setStamp({\n                                ...timestamp,\n                                time : copyList,\n                                flag : copyListF\n                            })\n                            setDate({\n                                ...date,\n                                t : new Date()\n                            })\n                        }\n                        \n                    }}\n                    disabled={recordState.start}\n                >\n                    {startButtonMessage.Message}\n                </Button>\n                <Button\n                    variant=\"contained\"\n\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(false);\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setMessage({\n                            ...startButtonMessage,\n                            Message:\"再開&タイムスタンプ\",\n                            state:2\n                        })\n                        setDate({\n                            ...date,\n                            t: new Date()\n                        })\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.break}\n                >\n                    一時中断\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: true,\n                            stop:  true,\n                            save:  false\n                        });\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(false);\n                        setMessage({\n                            ...startButtonMessage,\n                            Message:\"スタート\",\n                            state:0\n                        })\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.stop}\n                >\n                    停止\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        var url = \"http://localhost:8080/SAVESTAMP?ID=\"+props.id\n                        console.log(url);\n                        fetch(url,requestOptionsTIMESTAMP)\n                        .then((response)=> response.json())\n                        .then((responseJson) =>{\n                        console.log(responseJson)\n                        })\n                        .catch(e=>{\n                            console.log(e);\n                        })\n                        if(filenameState.setName){\n                            setState({\n                                ...recordState,\n                                start: false,\n                                break: true,\n                                stop:  true,\n                                save:  true\n                            });\n                        }\n\n                    }}\n                    disabled={recordState.save}\n                >\n                    保存\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList : any = [];\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setMessage({\n                            ...startButtonMessage,\n                            Message:\"すたーと\",\n                            state:0\n                        })\n                        setStamp({\n                            ...timestamp,\n                            time : copyList\n                        })\n                    }}\n                >\n                    リセット※記録は破棄されます\n                </Button>\n            </Stack>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>時刻</TableCell>\n                            <TableCell >フラグ</TableCell>\n                            <TableCell >区間時間</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {timestamp.time.map((item,index) => {\n                            let interval = timestamp.time[index+1]-item;\n                            if(timestamp.flag[index]){\n                                return(\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {toTime(item)}~\n                                        </TableCell>\n                                        <TableCell >解析区間</TableCell>\n                                        <TableCell >{toTime(interval)}</TableCell>\n                                    </TableRow>\n                                )\n                            }else{\n                                return(\n                                    <TableRow\n                                        key={index}\n                                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                    >\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {toTime(item)}~\n                                        </TableCell>\n                                        <TableCell >中断区間</TableCell>\n                                        <TableCell >{toTime(interval)}</TableCell>\n                                    </TableRow>\n                                )\n                            }\n                            \n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}