{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Button } from '@mui/material';\nvar MovieFiles = [];\nvar TimeFiles = [];\nconst [Files, setFiles] = React.useState({\n  movies: [],\n  times: []\n});\n\nfor (let m of MovieFiles) {\n  movies.push({\n    value: m,\n    label: m\n  });\n}\n\nfor (let t of TimeFiles) {\n  times.push({\n    value: t,\n    label: t\n  });\n}\n\nfunction login(id) {\n  if (id !== \"\") {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport default function SelectTextFields(props) {\n  const [files1, setFiles1] = React.useState('movie');\n  const [files2, setFiles2] = React.useState('time');\n\n  const handleChange1 = event => {\n    setFiles1(event.target.value);\n  };\n\n  const handleChange2 = event => {\n    setFiles2(event.target.value);\n  };\n\n  const requestOptionsFiles = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({})\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, props.message), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disabled: login(props.id),\n    onClick: () => {\n      let url = \"http://localhost:8080/FILES?ID=\" + props.id;\n      fetch(url, requestOptionsFiles).then(response => response.json()).then(responseJson => {\n        var movies = [];\n        var times = [];\n\n        for (let m of MovieFiles) {\n          movies.push({\n            value: m,\n            label: m\n          });\n        }\n\n        for (let t of TimeFiles) {\n          times.push({\n            value: t,\n            label: t\n          });\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\u4E00\\u89A7\\u53D6\\u5F97\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"your MovieFiles\",\n    value: files1,\n    onChange: handleChange1,\n    helperText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, movies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"your TimeFiles\",\n    value: files2,\n    onChange: handleChange2,\n    helperText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, times.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, option.label)))));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx"],"names":["React","Box","TextField","MenuItem","Button","MovieFiles","TimeFiles","Files","setFiles","useState","movies","times","m","push","value","label","t","login","id","SelectTextFields","props","files1","setFiles1","files2","setFiles2","handleChange1","event","target","handleChange2","requestOptionsFiles","method","headers","body","JSON","stringify","width","message","url","fetch","then","response","json","responseJson","map","option"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { Button } from '@mui/material';\n\nvar MovieFiles:string[] = [];\nvar TimeFiles:string[] = [];\nconst [Files,setFiles] = React.useState({\n    movies : [],\n    times  : []\n});\n\nfor(let m of MovieFiles){\n    movies.push({\n        value: m,\n        label: m,\n    })\n}\n\nfor(let t of TimeFiles){\n    times.push({\n        value: t,\n        label: t,\n    })\n}\nfunction login (id:string) {\n    if(id!==\"\"){\n        return false\n    }else{\n        return true\n    }\n}\nexport default function SelectTextFields(props:any) {\n    const [files1, setFiles1] = React.useState('movie');\n    const [files2, setFiles2] = React.useState('time');\n    const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles1(event.target.value);\n    };\n    const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles2(event.target.value);\n    };\n    \n    const requestOptionsFiles ={\n        method: 'POST',\n        headers:{'Content-Type': 'application/json'},\n        body: JSON.stringify({})\n    };\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <p>{props.message}</p>\n            <Button\n                variant=\"contained\"\n                disabled={login(props.id)}\n                onClick={()=>{\n                    let url = \"http://localhost:8080/FILES?ID=\"+props.id\n                    fetch(url,requestOptionsFiles)\n                    .then((response)=> response.json())\n                    .then((responseJson) =>{\n                        var movies  = [];\n                        var times   = [];\n                        for(let m of MovieFiles){\n                            movies.push({\n                                value: m,\n                                label: m,\n                            })\n                        }\n                        \n                        for(let t of TimeFiles){\n                            times.push({\n                                value: t,\n                                label: t,\n                            })\n                        }\n                    })\n                }}\n            >\n                一覧取得\n            </Button>\n            <div>\n                <TextField\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"your MovieFiles\"\n                    value={files1}\n                    onChange={handleChange1}\n                    helperText=\"\"\n                >\n                    {movies.map((option : any) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id=\"outlined-select-currency\"\n                    select\n                    label=\"your TimeFiles\"\n                    value={files2}\n                    onChange={handleChange2}\n                    helperText=\"\"\n                >\n                    {times.map((option : any) => (\n                        <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </div>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}