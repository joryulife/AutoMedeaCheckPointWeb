{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction login(id) {\n  if (id !== \"\") {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport default function SelectTextFields(props) {\n  _s();\n\n  const [Files, setFiles] = React.useState({\n    movies: [],\n    times: []\n  });\n  const [open, setOpen] = React.useState({\n    time: false,\n    movie: false\n  });\n\n  const handleClick1 = () => {\n    setOpen({ ...open,\n      time: !open.time,\n      movie: open.movie\n    });\n  };\n\n  const handleClick2 = () => {\n    setOpen({ ...open,\n      time: open.time,\n      movie: !open.movie\n    });\n  };\n\n  const [files1, setFiles1] = React.useState('movie');\n  const [files2, setFiles2] = React.useState('time');\n\n  const handleChange1 = event => {\n    setFiles1(event.target.value);\n  };\n\n  const handleChange2 = event => {\n    setFiles2(event.target.value);\n  };\n\n  const requestOptionsFiles = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({})\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      disabled: login(props.id),\n      onClick: () => {\n        let url = \"http://localhost:8080/FILES?ID=\" + props.id;\n        fetch(url, requestOptionsFiles).then(response => response.json()).then(responseJson => {\n          setFiles({ ...Files,\n            movies: responseJson.time,\n            times: responseJson.movie\n          });\n        });\n      },\n      children: \"\\u4E00\\u89A7\\u53D6\\u5F97\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n        onClick: handleClick1,\n        children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Inbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), open.time ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open.time,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"div\",\n          disablePadding: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Starred\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SelectTextFields, \"9T3B1NiRAGglER8atHGzlfYl9M0=\");\n\n_c = SelectTextFields;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTextFields\");","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/files.tsx"],"names":["React","Box","Button","List","ListItemButton","ListItemText","ExpandLess","ExpandMore","Collapse","login","id","SelectTextFields","props","Files","setFiles","useState","movies","times","open","setOpen","time","movie","handleClick1","handleClick2","files1","setFiles1","files2","setFiles2","handleChange1","event","target","value","handleChange2","requestOptionsFiles","method","headers","body","JSON","stringify","m","width","message","url","fetch","then","response","json","responseJson"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { Button } from '@mui/material';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport List from '@mui/material/List';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Collapse from '@mui/material/Collapse';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport StarBorder from '@mui/icons-material/StarBorder';\n\nfunction login (id:string) {\n    if(id!==\"\"){\n        return false\n    }else{\n        return true\n    }\n}\nexport default function SelectTextFields(props:any) {\n    const [Files,setFiles] = React.useState({\n        movies : [],\n        times  : []\n    });\n    const [open, setOpen] = React.useState({\n        time : false,\n        movie : false\n    });\n    const handleClick1 = () => {\n        setOpen({\n            ...open,\n            time : !open.time,\n            movie : open.movie\n        });\n    };\n    const handleClick2 = () => {\n        setOpen({\n            ...open,\n            time : open.time,\n            movie : !open.movie\n        });\n    };\n    const [files1, setFiles1] = React.useState('movie');\n    const [files2, setFiles2] = React.useState('time');\n    const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles1(event.target.value);\n    };\n    const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFiles2(event.target.value);\n    };\n    \n    const requestOptionsFiles ={\n        method: 'POST',\n        headers:{'Content-Type': 'application/json'},\n        body: JSON.stringify({})\n    };\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <p>{props.message}</p>\n            <Button\n                variant=\"contained\"\n                disabled={login(props.id)}\n                onClick={()=>{\n                    let url = \"http://localhost:8080/FILES?ID=\"+props.id\n                    fetch(url,requestOptionsFiles)\n                    .then((response)=> response.json())\n                    .then((responseJson) =>{\n                        setFiles({\n                            ...Files,\n                            movies:responseJson.time,\n                            times:responseJson.movie\n                        })\n                    })\n                }}\n            >\n                一覧取得\n            </Button>\n            <div>\n                <ListItemButton onClick={handleClick1}>\n                    <ListItemText primary=\"Inbox\" />\n                    {open.time ? <ExpandLess /> : <ExpandMore />}\n                </ListItemButton>\n                <Collapse in={open.time} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                        <ListItemText primary=\"Starred\" />\n                    </List>\n                </Collapse>\n            </div>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}