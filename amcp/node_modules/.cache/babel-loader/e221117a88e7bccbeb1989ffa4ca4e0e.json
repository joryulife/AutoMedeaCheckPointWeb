{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nexport default function ContainedButtons() {\n  const [recordState, setState] = React.useState({\n    start: false,\n    break: true,\n    stamp: true,\n    stop: true,\n    save: true\n  });\n  const [date, setDate] = React.useState({\n    t: new Date()\n  });\n  let timeArray = [];\n  let flagArray = [];\n  const [timestamp, setStamp] = React.useState({\n    time: timeArray,\n    flag: flagArray\n  });\n  var TimeStamp = timestamp.time.map((item, index) => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  });\n  var TiemStamp = timestamp.time.map((item, index) => {\n    return /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      sx: {\n        '&:last-child td, &:last-child th': {\n          border: 0\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, item), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, timestamp.flag[index]), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, item)));\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n\n      if (copyList.length === 0) {\n        copyList.push(0);\n        copyListF.push(true);\n      } else {\n        let tl = timestamp.time.length;\n        let nt = new Date();\n        let ott = date.t.getTime();\n        let ntt = nt.getTime();\n        copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n        copyListF.push(true);\n      }\n\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"\\u30B9\\u30BF\\u30FC\\u30C8\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n      let tl = timestamp.time.length;\n      let nt = new Date();\n      let ott = date.t.getTime();\n      let ntt = nt.getTime();\n      copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n      copyListF.push(false);\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.break,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"\\u4E00\\u6642\\u4E2D\\u65AD\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [...timestamp.time];\n      let copyListF = [...timestamp.flag];\n      let tl = timestamp.time.length;\n      let nt = new Date();\n      let ott = date.t.getTime();\n      let ntt = nt.getTime();\n      copyList.push(timestamp.time[tl - 1] + (ntt - ott) / 1000);\n      copyListF.push(true);\n      setState({ ...recordState,\n        start: true,\n        break: false,\n        stamp: false,\n        stop: false,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList,\n        flag: copyListF\n      });\n      setDate({ ...date,\n        t: new Date()\n      });\n    },\n    disabled: recordState.stamp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"\\u30BF\\u30A4\\u30E0\\u30B9\\u30BF\\u30F3\\u30D7\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: true,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: false\n      });\n    },\n    disabled: recordState.stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, \"\\u505C\\u6B62\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n    },\n    disabled: recordState.save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"\\u4FDD\\u5B58\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let copyList = [];\n      setState({ ...recordState,\n        start: false,\n        break: true,\n        stamp: true,\n        stop: true,\n        save: true\n      });\n      setStamp({ ...timestamp,\n        time: copyList\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"\\u30EA\\u30BB\\u30C3\\u30C8\\u203B\\u8A18\\u9332\\u306F\\u7834\\u68C4\\u3055\\u308C\\u307E\\u3059\")), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    sx: {\n      minWidth: 650\n    },\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, \"\\u6642\\u523B\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, \"\\u30D5\\u30E9\\u30B0\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"\\u533A\\u9593\\u6642\\u9593\"))))));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/record.tsx"],"names":["React","Button","Stack","Box","ListItem","ListItemText","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ContainedButtons","recordState","setState","useState","start","break","stamp","stop","save","date","setDate","t","Date","timeArray","flagArray","timestamp","setStamp","time","flag","TimeStamp","map","item","index","TiemStamp","border","copyList","copyListF","length","push","tl","nt","ott","getTime","ntt","minWidth"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport default function ContainedButtons() {\n    const [recordState, setState] = React.useState({\n        start: false,\n        break: true,\n        stamp: true,\n        stop:  true,\n        save:  true\n    });\n    const [date,setDate] = React.useState({\n        t: new Date()\n    });\n    let timeArray: number[] = [];\n    let flagArray: boolean[] = [];\n    const [timestamp, setStamp] = React.useState({\n        time : timeArray,\n        flag : flagArray\n    });\n\n    var TimeStamp = timestamp.time.map((item,index) => {\n        return(\n            <ListItem key={index}>\n                <ListItemText primary={item} />\n            </ListItem>\n        )\n    });\n\n    var TiemStamp = timestamp.time.map((item,index) => {\n        return(\n            <TableBody>\n                <TableRow\n                    key={index}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                >\n                <TableCell component=\"th\" scope=\"row\">\n                    {item}\n                </TableCell>\n                    <TableCell align=\"right\">{timestamp.flag[index]}</TableCell>\n                    <TableCell align=\"right\">{item}</TableCell>\n                </TableRow>\n            </TableBody>\n        )\n    })\n\n    return (\n        <Box>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        if(copyList.length === 0){\n                            copyList.push(0);\n                            copyListF.push(true);\n                        }else{\n                            let tl = timestamp.time.length;\n                            let nt = new Date();\n                            let ott = date.t.getTime();\n                            let ntt = nt.getTime();\n                            copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                            copyListF.push(true);\n                        }\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.start}\n                >\n                    スタート\n                </Button>\n                <Button\n                    variant=\"contained\"\n\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(false);\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setDate({\n                            ...date,\n                            t: new Date()\n                        })\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.break}\n                >\n                    一時中断\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList = [...timestamp.time];\n                        let copyListF = [...timestamp.flag];\n                        let tl = timestamp.time.length;\n                        let nt = new Date();\n                        let ott = date.t.getTime();\n                        let ntt = nt.getTime();\n                        copyList.push((timestamp.time[tl-1] + (ntt-ott)/1000));\n                        copyListF.push(true);\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: false,\n                            stamp: false,\n                            stop:  false,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList,\n                            flag : copyListF\n                        })\n                        setDate({\n                            ...date,\n                            t : new Date()\n                        })\n                    }}\n                    disabled={recordState.stamp}\n                >\n                    タイムスタンプ\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: true,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  false\n                        });\n                    }}\n                    disabled={recordState.stop}\n                >\n                    停止\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={()=>{\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                    }}\n                    disabled={recordState.save}\n                >\n                    保存\n                </Button>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let copyList : any = [];\n                        setState({\n                            ...recordState,\n                            start: false,\n                            break: true,\n                            stamp: true,\n                            stop:  true,\n                            save:  true\n                        });\n                        setStamp({\n                            ...timestamp,\n                            time : copyList\n                        })\n                    }}\n                >\n                    リセット※記録は破棄されます\n                </Button>\n            </Stack>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>時刻</TableCell>\n                            <TableCell >フラグ</TableCell>\n                            <TableCell >区間時間</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    \n                </Table>\n            </TableContainer>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}