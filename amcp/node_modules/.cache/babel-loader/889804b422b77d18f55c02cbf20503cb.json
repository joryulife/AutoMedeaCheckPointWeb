{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/output.tsx\";\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nexport default function OutPut() {\n  const AllTimeFile = [\"a\", \"b\", \"c\"];\n  const AllMovieFile = [\"a\", \",b\", \"c\"];\n  const tutorial = \"開始時間\\nキーワード：\\n区間毎の冒頭\\nの順に表示されます。\\n\";\n  const index = [\"00:00:00~\\n解析区間街\\n\", \"00:00:21~\\nキーワード：マイナス * 行 席 数 成分 横 普通 かけ 今日\\n線形代数煮物連続講義大猫男で行列を使ってきたいと思います上越の最初にこんなもんだって\\n\", \"00:17:21~\\n解析区間外\\n\", \"00:17:46~\\nキーワード：ベクトル * 一次 平面 二つ ケース 平行 組 場合 高校\\n第4501次独立と11とかの考え方について扱ってきたいと思います今はね実はこの考え方自体は高校数学平面ベクトル空間メスの中に現れていたんだねこのを習った必ずかにかかわらずねあのね最初にまずその確認の意味を込めて二次元讃岐前から話を始めていきましょう\\n\", \"00:31:15~\\n解析区間外\\n\", \"00:32:25~\\nキーワード：マイナス 計算 * 行列式 因子 AI プラス −1 注目 部分\\n行列式に中でも用意して迎えたやつになりますこのような展開方法サイファー3かける3よりも大きいサイズのね強烈な場合に宜しくは計算できるなので楽しみにしてくださいじゃ早速願いしたいから話ししていきましょうじゃあ因子展開このように一般的な話をする前に\\n\", \"00:59:47~\\n解析区間外\\n\", \"01:00:05~\\nキーワード：行列 独立 変換 計算 X 全部 固有値 一次 対角化 固有ベクトル\\n天下第13項では誰か使ってもないして扱っていきましょうまず最初に書かの定義を一緒に見ていきましょうこんな風な感じで N 次正方行列 A に対し適当な正則行列 P が存在して正則行列って逆行列を持たなけれたことあったりすると\\n\"];\n  /*const handleChange = (t : string[]) => {\n      let IndexText = \"\";\n      for(let T of t){\n          IndexText+=T;\n      }\n      setIndex({\n          ...Index,\n          IndexT:IndexText\n      })\n  };*/\n\n  const [indexText, setIndex] = React.useState({\n    IndexT: \"\"\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '70ch'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"your MovieFiles\",\n    value: \"TimeFile\",\n    helperText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, AllTimeFile.map(value => /*#__PURE__*/React.createElement(MenuItem, {\n    key: value,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, value))), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"your TimeFiles\",\n    value: \"MovieFile\",\n    helperText: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, AllMovieFile.map(value => /*#__PURE__*/React.createElement(MenuItem, {\n    key: value,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, value))))), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => {\n      let IndexText = tutorial;\n\n      for (let T of index) {\n        IndexText += T;\n      }\n\n      setIndex({ ...indexText,\n        IndexT: IndexText\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"\\u4F5C\\u6210\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-flexible\",\n    multiline: true,\n    fullWidth: true,\n    label: tutorial,\n    value: indexText.IndexT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/output.tsx"],"names":["React","Button","Stack","Box","TextField","MenuItem","OutPut","AllTimeFile","AllMovieFile","tutorial","index","indexText","setIndex","useState","IndexT","m","width","map","value","IndexText","T"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\n\n\nexport default function OutPut() {\n    const AllTimeFile: string[] = [\"a\",\"b\",\"c\"];\n    const AllMovieFile: string[] = [\"a\",\",b\",\"c\"];\n    const tutorial = \"開始時間\\nキーワード：\\n区間毎の冒頭\\nの順に表示されます。\\n\"\n\n    const index: string[] = [\n        \"00:00:00~\\n解析区間街\\n\",\n        \"00:00:21~\\nキーワード：マイナス * 行 席 数 成分 横 普通 かけ 今日\\n線形代数煮物連続講義大猫男で行列を使ってきたいと思います上越の最初にこんなもんだって\\n\",\n        \"00:17:21~\\n解析区間外\\n\",\n        \"00:17:46~\\nキーワード：ベクトル * 一次 平面 二つ ケース 平行 組 場合 高校\\n第4501次独立と11とかの考え方について扱ってきたいと思います今はね実はこの考え方自体は高校数学平面ベクトル空間メスの中に現れていたんだねこのを習った必ずかにかかわらずねあのね最初にまずその確認の意味を込めて二次元讃岐前から話を始めていきましょう\\n\",\n        \"00:31:15~\\n解析区間外\\n\",\n        \"00:32:25~\\nキーワード：マイナス 計算 * 行列式 因子 AI プラス −1 注目 部分\\n行列式に中でも用意して迎えたやつになりますこのような展開方法サイファー3かける3よりも大きいサイズのね強烈な場合に宜しくは計算できるなので楽しみにしてくださいじゃ早速願いしたいから話ししていきましょうじゃあ因子展開このように一般的な話をする前に\\n\",\n        \"00:59:47~\\n解析区間外\\n\",\n        \"01:00:05~\\nキーワード：行列 独立 変換 計算 X 全部 固有値 一次 対角化 固有ベクトル\\n天下第13項では誰か使ってもないして扱っていきましょうまず最初に書かの定義を一緒に見ていきましょうこんな風な感じで N 次正方行列 A に対し適当な正則行列 P が存在して正則行列って逆行列を持たなけれたことあったりすると\\n\"\n    ]\n    /*const handleChange = (t : string[]) => {\n        let IndexText = \"\";\n        for(let T of t){\n            IndexText+=T;\n        }\n        setIndex({\n            ...Index,\n            IndexT:IndexText\n        })\n    };*/\n    const [indexText,setIndex] = React.useState({\n        IndexT : \"\"\n    });\n\n    return (\n        <Box\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '70ch' },\n            }}\n        >\n            <Box\n                component=\"form\"\n                sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <div>\n                    <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"your MovieFiles\"\n                        value=\"TimeFile\"\n                        helperText=\"\"\n                    >\n                        {AllTimeFile.map((value) => (\n                            <MenuItem key={value} value={value}>\n                                {value}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"your TimeFiles\"\n                        value=\"MovieFile\"\n                        helperText=\"\"\n                    >\n                        {AllMovieFile.map((value) => (\n                            <MenuItem key={value} value={value}>\n                            {value}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </div>\n            </Box>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        let IndexText = tutorial;\n                        for(let T of index){\n                            IndexText+=T;\n                        }\n                        setIndex({\n                            ...indexText,\n                            IndexT:IndexText\n                        })\n                    }}\n                >\n                    作成\n                </Button>\n            </Stack>\n            <TextField\n                id=\"outlined-multiline-flexible\"\n                multiline\n                fullWidth\n                label={tutorial}\n                value={indexText.IndexT}\n            >\n            </TextField>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}