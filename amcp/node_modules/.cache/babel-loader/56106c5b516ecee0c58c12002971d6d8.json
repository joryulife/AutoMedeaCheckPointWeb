{"ast":null,"code":"var _jsxFileName = \"/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/output.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OutPut(props) {\n  _s();\n\n  const URL = \"http://localhost:8080\";\n  var AllTimeFile = [\"a\", \"b\", \"c\"];\n  var AllMovieFile = [\"a\", \"b\", \"c\"];\n  const tutorial = \"開始時間\\nキーワード：\\n区間毎の冒頭\\nの順に表示されます。\\n\\n\";\n  const index = [\"00:00:00~\\n解析区間外\\n\\n\", \"00:00:21~\\nキーワード：マイナス * 行 席 数 成分 横 普通 かけ 今日\\n線形代数煮物連続講義大猫男で行列を使ってきたいと思います上越の最初にこんなもんだって\\n\\n\", \"00:17:21~\\n解析区間外\\n\\n\", \"00:17:46~\\nキーワード：ベクトル * 一次 平面 二つ ケース 平行 組 場合 高校\\n第4501次独立と11とかの考え方について扱ってきたいと思います今はね実はこの考え方自体は高校数学平面ベクトル空間メスの中に現れていたんだねこのを習った必ずかにかかわらずねあのね最初にまずその確認の意味を込めて二次元讃岐前から話を始めていきましょう\\n\\n\", \"00:31:15~\\n解析区間外\\n\\n\", \"00:32:25~\\nキーワード：マイナス 計算 * 行列式 因子 AI プラス −1 注目 部分\\n行列式に中でも用意して迎えたやつになりますこのような展開方法サイファー3かける3よりも大きいサイズのね強烈な場合に宜しくは計算できるなので楽しみにしてくださいじゃ早速願いしたいから話ししていきましょうじゃあ因子展開このように一般的な話をする前に\\n\\n\", \"00:59:47~\\n解析区間外\\n\\n\", \"01:00:05~\\nキーワード：行列 独立 変換 計算 X 全部 固有値 一次 対角化 固有ベクトル\\n天下第13項では誰か使ってもないして扱っていきましょうまず最初に書かの定義を一緒に見ていきましょうこんな風な感じで N 次正方行列 A に対し適当な正則行列 P が存在して正則行列って逆行列を持たなけれたことあったりすると\\n\\n\"];\n  /*const handleChange = (t : string[]) => {\n      let IndexText = \"\";\n      for(let T of t){\n          IndexText+=T;\n      }\n      setIndex({\n          ...Index,\n          IndexT:IndexText\n      })\n  };*/\n\n  const [indexText, setIndex] = React.useState({\n    IndexT: \"\"\n  });\n  const [selectFile, setFile] = React.useState({\n    time: \"\",\n    movie: \"\"\n  });\n\n  const handleChange1 = event => {\n    setFile({ ...selectFile,\n      time: event.target.value\n    });\n  };\n\n  const handleChange2 = event => {\n    setFile({ ...selectFile,\n      movie: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      '& .MuiTextField-root': {\n        m: 1,\n        width: '70ch'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& .MuiTextField-root': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-select-currency\",\n          select: true,\n          label: \"your MovieFiles\",\n          value: selectFile.time,\n          helperText: \"\",\n          onChange: handleChange1,\n          children: AllTimeFile.map(value => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: value,\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-select-currency\",\n          select: true,\n          label: \"your TimeFiles\",\n          value: selectFile.movie,\n          helperText: \"\",\n          onChange: handleChange2,\n          children: AllMovieFile.map(value => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: value,\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => {\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              time: selectFile.time,\n              movie: selectFile.movie\n            })\n          };\n          fetch(URL + \"/makeindex\", requestOptions);\n          let IndexText = tutorial;\n\n          for (let T of index) {\n            IndexText += T;\n          }\n\n          setIndex({ ...indexText,\n            IndexT: IndexText\n          });\n        },\n        children: \"\\u4F5C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-multiline-flexible\",\n      multiline: true,\n      fullWidth: true,\n      label: tutorial,\n      value: indexText.IndexT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OutPut, \"fh4QeUEH6+OpjeuSaU3qcXMx01g=\");\n\n_c = OutPut;\n\nvar _c;\n\n$RefreshReg$(_c, \"OutPut\");","map":{"version":3,"sources":["/Users/takumifukuo/go/src/github.com/joryulife/AutoMediaCheckPointWeb/amcp/src/output.tsx"],"names":["React","Button","Stack","Box","TextField","MenuItem","OutPut","props","URL","AllTimeFile","AllMovieFile","tutorial","index","indexText","setIndex","useState","IndexT","selectFile","setFile","time","movie","handleChange1","event","target","value","handleChange2","m","width","message","map","requestOptions","method","headers","body","JSON","stringify","fetch","IndexText","T"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\n\n\nexport default function OutPut(props:any) {\n    const URL = \"http://localhost:8080\"\n    var AllTimeFile = [\"a\",\"b\",\"c\"];\n    var AllMovieFile = [\"a\",\"b\",\"c\"];\n    const tutorial = \"開始時間\\nキーワード：\\n区間毎の冒頭\\nの順に表示されます。\\n\\n\"\n\n    const index: string[] = [\n        \"00:00:00~\\n解析区間外\\n\\n\",\n        \"00:00:21~\\nキーワード：マイナス * 行 席 数 成分 横 普通 かけ 今日\\n線形代数煮物連続講義大猫男で行列を使ってきたいと思います上越の最初にこんなもんだって\\n\\n\",\n        \"00:17:21~\\n解析区間外\\n\\n\",\n        \"00:17:46~\\nキーワード：ベクトル * 一次 平面 二つ ケース 平行 組 場合 高校\\n第4501次独立と11とかの考え方について扱ってきたいと思います今はね実はこの考え方自体は高校数学平面ベクトル空間メスの中に現れていたんだねこのを習った必ずかにかかわらずねあのね最初にまずその確認の意味を込めて二次元讃岐前から話を始めていきましょう\\n\\n\",\n        \"00:31:15~\\n解析区間外\\n\\n\",\n        \"00:32:25~\\nキーワード：マイナス 計算 * 行列式 因子 AI プラス −1 注目 部分\\n行列式に中でも用意して迎えたやつになりますこのような展開方法サイファー3かける3よりも大きいサイズのね強烈な場合に宜しくは計算できるなので楽しみにしてくださいじゃ早速願いしたいから話ししていきましょうじゃあ因子展開このように一般的な話をする前に\\n\\n\",\n        \"00:59:47~\\n解析区間外\\n\\n\",\n        \"01:00:05~\\nキーワード：行列 独立 変換 計算 X 全部 固有値 一次 対角化 固有ベクトル\\n天下第13項では誰か使ってもないして扱っていきましょうまず最初に書かの定義を一緒に見ていきましょうこんな風な感じで N 次正方行列 A に対し適当な正則行列 P が存在して正則行列って逆行列を持たなけれたことあったりすると\\n\\n\"\n    ]\n    /*const handleChange = (t : string[]) => {\n        let IndexText = \"\";\n        for(let T of t){\n            IndexText+=T;\n        }\n        setIndex({\n            ...Index,\n            IndexT:IndexText\n        })\n    };*/\n    const [indexText,setIndex] = React.useState({\n        IndexT : \"\"\n    });\n    const [selectFile,setFile] = React.useState({\n        time : \"\",\n        movie : \"\",\n    });\n    const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFile({\n            ...selectFile,\n            time:event.target.value\n        });\n    };\n    const handleChange2 = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setFile({\n            ...selectFile,\n            movie:event.target.value\n        });\n    };\n\n    return (\n        <Box\n            sx={{\n                '& .MuiTextField-root': { m: 1, width: '70ch' },\n            }}\n        >\n            <p>{props.message}</p>\n            <Box\n                component=\"form\"\n                sx={{\n                    '& .MuiTextField-root': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n                <div>\n                    <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"your MovieFiles\"\n                        value={selectFile.time}\n                        helperText=\"\"\n                        onChange={handleChange1}\n                    >\n                        {AllTimeFile.map((value) => (\n                            <MenuItem key={value} value={value}>\n                                {value}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                    <TextField\n                        id=\"outlined-select-currency\"\n                        select\n                        label=\"your TimeFiles\"\n                        value={selectFile.movie}\n                        helperText=\"\"\n                        onChange={handleChange2}\n                    >\n                        {AllMovieFile.map((value) => (\n                            <MenuItem key={value} value={value}>\n                                {value}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n                </div>\n            </Box>\n            <Stack direction=\"row\" spacing={2}>\n                <Button \n                    variant=\"contained\"\n                    onClick={()=>{\n                        const requestOptions ={\n                            method: 'POST',\n                            headers:{'Content-Type': 'application/json'},\n                            body: JSON.stringify({\n                                time: selectFile.time,\n                                movie: selectFile.movie\n                            })\n                        };\n                        fetch(URL+\"/makeindex\",requestOptions)\n                        let IndexText = tutorial;\n                        for(let T of index){\n                            IndexText+=T;\n                        }\n                        setIndex({\n                            ...indexText,\n                            IndexT:IndexText\n                        })\n                    }}\n                >\n                    作成\n                </Button>\n            </Stack>\n            <TextField\n                id=\"outlined-multiline-flexible\"\n                multiline\n                fullWidth\n                label={tutorial}\n                value={indexText.IndexT}\n            >\n            </TextField>\n        </Box>\n    );\n}"]},"metadata":{},"sourceType":"module"}